{"version":3,"sources":["components/Dashboard.jsx","components/Form.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","paper","minWidth","padding","display","justifyContent","card","width","input","marginBottom","button","Dashboard","props","useState","state","setState","changeState","setchangeState","sortdueDate","setSortdueDate","useEffect","console","log","axios","get","then","response","data","catch","error","sortDue","e","onClickHandler","item","idx","delete","_id","status","put","Paper","elevation","style","Card","CardContent","className","onClick","backgroundColor","map","index","key","name","color","Date","dueDate","getTime","substring","Button","margin","textAlign","navigate","Form","formState","setFormState","hasError","setHasError","errorState","setErrorState","change","validator","onChangeHandler","target","value","temp","length","marginRight","to","onSubmit","preventDefault","post","errors","message","FormControl","variant","InputLabel","OutlinedInput","id","type","onChange","TextField","label","InputLabelProps","shrink","varient","disabled","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88973dbd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, navigate } from '@reach/router'\r\n// import AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\r\nimport {\r\n    Paper,\r\n    FormControl,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Button,\r\n    styled,\r\n    Card,\r\n    CardContent,\r\n} from '@material-ui/core';\r\nconst styles = {\r\n    paper: {\r\n        minWidth: \"95%\", padding: \"1rem\", display:\"flex\", justifyContent: \"space-evenly\"\r\n    },\r\n    card: {\r\n        width: \"30%\", padding: \"1rem\", justifyContent: \"space-evenly\"\r\n    },\r\n    input: {\r\n        marginBottom: \"1rem\"\r\n    },\r\n    button: {\r\n        width: \"100%\"\r\n    }\r\n}\r\n\r\nconst Dashboard = (props) => {\r\n    const [state, setState] = useState([])\r\n    const [changeState, setchangeState] = useState(false)\r\n    const [sortdueDate, setSortdueDate] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        console.log('you are in useeffect')\r\n        axios.get(`http://localhost:8000/api/readAll/${sortdueDate}`)\r\n            .then(response => setState([...response.data]))\r\n            .catch(error => console.log(error))\r\n    }, [changeState,sortdueDate])\r\n \r\n    const sortDue = (e) => {\r\n        setSortdueDate(-1*sortdueDate)\r\n    }\r\n    \r\n    const goToNew = () => {\r\n        navigate('/projects/new')\r\n    }\r\n    const onClickHandler = (item, idx) => {\r\n        if (idx === 3) {\r\n            axios.delete(`http://localhost:8000/api/deleteOne/${item._id}`)\r\n                .then(response => setchangeState(!changeState))\r\n                .catch(error => console.log(error))\r\n        } else {\r\n            item.status = idx\r\n            axios.put(`http://localhost:8000/api/updateOne/${item._id}`,item)\r\n                .then(response => setchangeState(!changeState))\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <>\r\n        <Paper elevation={3} style={styles.paper}>\r\n        <Card style={styles.card}><CardContent>\r\n        <div className=\"backlog\">\r\n                <h2 onClick={sortDue} style={{backgroundColor: \"#9FC5F8\"}}>Backlog</h2>\r\n                {state.map((item, index) => (\r\n                    item.status === 0 ?\r\n                        <div key={index}>\r\n                            <h4>{item.name}</h4>\r\n                            <p style={{color:new Date(item.dueDate).getTime() - new Date().getTime() < 0 ? 'red':'black'}}>Due: {item.dueDate.substring(0,10)}</p>\r\n                            <Button style={{backgroundColor:\"#FFE599\"}} onClick={(e) => onClickHandler(item, 1)}>Start Project</Button>\r\n                      \r\n                        </div>\r\n                        : null\r\n                ))}\r\n            </div>\r\n            </CardContent></Card>\r\n            <Card style={styles.card}><CardContent>\r\n            <div className=\"progress\">\r\n                <h2 onClick={sortDue} style={{backgroundColor:\"#FFE599\"}}>In Progress</h2>\r\n                {state.map((item, index) => (\r\n                    item.status === 1 ?\r\n                        <div key={index}>\r\n                            <h4>{item.name}</h4>\r\n                            <p style={{color:new Date(item.dueDate).getTime() - new Date().getTime() < 0 ? 'red':'black'}}>Due: {item.dueDate.substring(0,10)}</p>\r\n                            <Button style={{backgroundColor:\"#B6D7A8\"}} onClick={(e) => onClickHandler(item, 2)}>Move To Completed</Button>\r\n                        </div>\r\n                        : null\r\n                ))}\r\n            </div>\r\n            </CardContent></Card>\r\n            <Card style={styles.card}><CardContent>\r\n            <div className=\"completed\">\r\n                <h2 onClick={sortDue} style={{backgroundColor:\"#B6D7A8\"}}>Completed</h2>\r\n                {state.map((item, index) => (\r\n                    item.status === 2 ?\r\n                        <div key={index}>\r\n                            <h4>{item.name}</h4>\r\n                            <p style={{color:new Date(item.dueDate).getTime() - new Date().getTime() < 0 ? 'red':'black'}}>Due: {item.dueDate.substring(0,10)}</p>\r\n                            <Button style={{backgroundColor:\"#EA9999\"}} onClick={(e) => onClickHandler(item, 3)}>Remove Project</Button>\r\n                </div>\r\n                        : null\r\n                ))}\r\n            </div>\r\n            </CardContent></Card>\r\n            </Paper>\r\n        <Button style={{backgroundColor:\"#9FC5F8\", display:\"inline-block\", margin:\"1px\", textAlign: \"left\"}} onClick={goToNew}>Add New Project</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { navigate, Link } from \"@reach/router\";\r\nimport {\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Button,\r\n  styled,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nconst styles = {\r\n  paper: {\r\n    width: \"30rem\",\r\n    padding: \"1rem\",\r\n    margin: \"0 auto\"\r\n  },\r\n  input: {\r\n    marginBottom: \"1rem\"\r\n  },\r\n  button: {\r\n    width: \"400px\",\r\n    backgroundColor: \"#9FC5F8\"\r\n  }\r\n};\r\n\r\nconst Form = props => {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    dueDate: \"\"\r\n  });\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    name: \"\",\r\n    dueDate: \"\"\r\n  });\r\n\r\n  const [change, setChange] = useState(false);\r\n\r\n  const nameError = \"FRONT END: Project name must be at least 3 characters\";\r\n  //   const dueDateError = \"FRONT END: Must enter a valid Due Date\";\r\n\r\n  useEffect(() => {\r\n    console.log(\"you are in form useeffect\");\r\n    validator();\r\n  }, [errorState, change, formState]);\r\n\r\n  const onChangeHandler = e => {\r\n    setFormState({\r\n      ...formState,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n    console.log(\"formstate at the end of onchange is:\", formState);\r\n  };\r\n  const validator = () => {\r\n    console.log(\"you are in validator start\");\r\n    let temp = false;\r\n    if (formState.name.length > 0 && formState.name.length < 3) temp = true;\r\n    if (formState.dueDate.length === 0) temp = true;\r\n    setHasError(temp);\r\n  };\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(\"you are in create onsumbit\");\r\n    axios\r\n      .post(\"http://localhost:8000/api/create\", formState)\r\n      .then(response => navigate(\"/\"))\r\n      .catch(error => {\r\n        console.log(\"error is:\", error.response);\r\n        if (error.response.data.name == \"MongoError\") {\r\n          setErrorState({\r\n            name: \"BACKEND: Project already exists!\"\r\n          });\r\n        } else {\r\n          setErrorState({\r\n            name: error.response.data.errors.name\r\n              ? error.response.data.errors.name.message\r\n              : \"\",\r\n            dueDate: error.response.data.errors.dueDate\r\n              ? error.response.data.errors.dueDate.message\r\n              : \"\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p style={{ margin: \"5px\", textAlign: \"right\" }}>\r\n        <Link style={{ marginRight: \"10px\" }} to=\"/\">\r\n          Back to Dashboard\r\n        </Link>\r\n      </p>\r\n      <Paper elevation={3} style={styles.paper}>\r\n        <h2>Plan a new Project</h2>\r\n        <div>\r\n          <p style={{ color: \"blue\" }}>\r\n            {formState.name.length > 0 &&\r\n              formState.name.length < 3 &&\r\n              nameError}\r\n          </p>\r\n          {/* <p style={{ color: \"blue\" }}>{formState.dueDate.length === 0 && dueDateError}</p> */}\r\n          <p style={{ color: \"red\" }}>{errorState.name}</p>\r\n          <p style={{ color: \"red\" }}>{errorState.dueDate}</p>\r\n\r\n          <form onSubmit={onSubmitHandler}>\r\n            <FormControl variant=\"outlined\" style={styles.input}>\r\n              <InputLabel>Name</InputLabel>\r\n              <OutlinedInput\r\n                id=\"name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                onChange={onChangeHandler}\r\n              />\r\n            </FormControl>\r\n            <br />\r\n            <FormControl variant=\"outlined\" style={styles.input}>\r\n              <TextField\r\n                id=\"dueDate\"\r\n                name=\"dueDate\"\r\n                label=\"Due Date\"\r\n                type=\"date\"\r\n                variant=\"outlined\"\r\n                onChange={onChangeHandler}\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n              />\r\n            </FormControl>\r\n            <br />\r\n            <Button\r\n              style={styles.button}\r\n              type=\"submit\"\r\n              varient=\"contained\"\r\n              color=\"primary\"\r\n              disabled={hasError}\r\n            >\r\n              Plan Project\r\n            </Button>\r\n          </form>\r\n\r\n          {/* <form onSubmit={onSubmitHandler}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={onChangeHandler}\r\n          value={formState.name || ''}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"position\">Position</label>\r\n        <input\r\n          id=\"position\"\r\n          type=\"text\"\r\n          name=\"position\"\r\n          onChange={onChangeHandler}\r\n          value={formState.position || ''}\r\n        />\r\n        <br />\r\n        <input\r\n          id=\"birthday\"\r\n          type=\"date\"\r\n          name=\"birthday\"\r\n          onChange={onChangeHandler}\r\n          value={formState.birthday.substring(0,10) || ''}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" >Submit</button>\r\n        <h2 onClick={callConsole}>console.log</h2>\r\n      </form> */}\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useEffect } from 'react';\nimport './App.css';\n// import 'materialize-css/dist/css/materialize.min.css';\nimport { Router, navigate } from '@reach/router'\nimport Dashboard from './components/Dashboard'\nimport Form from './components/Form'\n\n\nfunction App() {\n    useEffect(() => {\n        navigate('/')\n    }, [])\n\n    return (\n        <div className=\"App\">\n            <h1>Project Manager</h1>\n            <Router>\n                <Dashboard path=\"/\" />\n                <Form path=\"/projects/new\" />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}