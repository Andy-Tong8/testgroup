{"version":3,"sources":["components/Form.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["styles","paper","width","padding","margin","input","marginBottom","button","backgroundColor","Form","props","useState","name","dueDate","formState","setFormState","hasError","setHasError","errorState","setErrorState","change","useEffect","console","log","validator","onChangeHandler","e","target","value","temp","length","style","textAlign","marginRight","to","Paper","elevation","color","onSubmit","preventDefault","axios","post","then","response","navigate","catch","error","data","errors","message","FormControl","variant","InputLabel","OutlinedInput","id","type","onChange","TextField","label","InputLabelProps","shrink","Button","varient","disabled","minWidth","display","justifyContent","card","Dashboard","state","setState","changeState","setchangeState","sortdueDate","setSortdueDate","get","sortDue","onClickHandler","item","idx","delete","_id","status","put","Card","CardContent","className","onClick","map","index","key","Date","getTime","substring","startIcon","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f101862.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { navigate, Link } from \"@reach/router\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Paper,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  Button,\r\n  styled,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nconst styles = {\r\n  paper: {\r\n    width: \"30rem\",\r\n    padding: \"1rem\",\r\n    margin: \"0 auto\"\r\n  },\r\n  input: {\r\n    marginBottom: \"1rem\"\r\n  },\r\n  button: {\r\n    width: \"400px\",\r\n    backgroundColor: \"#9FC5F8\",\r\n    \r\n    \r\n  }\r\n};\r\n\r\nconst Form = props => {\r\n  const [formState, setFormState] = useState({\r\n    name: \"\",\r\n    dueDate: \"\"\r\n  });\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const [errorState, setErrorState] = useState({\r\n    name: \"\",\r\n    dueDate: \"\"\r\n  });\r\n\r\n  const [change, setChange] = useState(false);\r\n\r\n  const nameError = \"FRONT END: Project name must be at least 3 characters\";\r\n  //   const dueDateError = \"FRONT END: Must enter a valid Due Date\";\r\n\r\n  useEffect(() => {\r\n    console.log(\"you are in form useeffect\");\r\n    validator();\r\n  }, [errorState, change, formState]);\r\n\r\n  const onChangeHandler = e => {\r\n    setFormState({\r\n      ...formState,\r\n      [e.target.name]: e.target.value\r\n    });\r\n\r\n    console.log(\"formstate at the end of onchange is:\", formState);\r\n  };\r\n  const validator = () => {\r\n    console.log(\"you are in validator start\");\r\n    let temp = false;\r\n    if (formState.name.length > 0 && formState.name.length < 3) temp = true;\r\n    if (formState.dueDate.length === 0) temp = true;\r\n    setHasError(temp);\r\n  };\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n      console.log(\"you are in create onsumbit\");\r\n      axios\r\n        .post(\"http://localhost:8000/api/create\", formState)\r\n        .then(response => navigate(\"/\"))\r\n        .catch(error => {\r\n          console.log(\"error is:\", error.response);\r\n          if (error.response.data.name == \"MongoError\")\r\n          {\r\n            setErrorState({\r\n            name: \"BACKEND: Project already exists!\",\r\n          });\r\n          }else{\r\n          setErrorState({\r\n            name: error.response.data.errors.name\r\n              ? error.response.data.errors.name.message\r\n              : \"\",\r\n            dueDate: error.response.data.errors.dueDate\r\n              ? error.response.data.errors.dueDate.message\r\n              : \"\",\r\n          });}\r\n          \r\n        });\r\n  };\r\n\r\n  return (\r\n      <>\r\n      <p style={{margin:\"5px\",textAlign:\"right\"}}><Link style={{marginRight: \"10px\"}} to=\"/\">Back to Dashboard</Link></p>\r\n    <Paper elevation={3} style={styles.paper}>\r\n      <h2>Plan a new Project</h2>\r\n      <div>\r\n        <p style={{ color: \"blue\" }}>\r\n          {formState.name.length > 0 && formState.name.length < 3 && nameError}\r\n        </p>\r\n        {/* <p style={{ color: \"blue\" }}>{formState.dueDate.length === 0 && dueDateError}</p> */}\r\n        <p style={{ color: \"red\" }}>{errorState.name}</p>\r\n        <p style={{ color: \"red\" }}>{errorState.dueDate}</p>\r\n\r\n        <form onSubmit={onSubmitHandler}>\r\n          <FormControl variant=\"outlined\" style={styles.input}>\r\n            <InputLabel>Name</InputLabel>\r\n            <OutlinedInput\r\n              id=\"name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={onChangeHandler}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"outlined\" style={styles.input}>\r\n            <TextField\r\n              id=\"dueDate\"\r\n              name=\"dueDate\"\r\n              label=\"Due Date\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeHandler}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <Button\r\n            style={styles.button}\r\n            type=\"submit\"\r\n            varient=\"contained\"\r\n            color=\"primary\"\r\n            disabled={hasError}\r\n          >\r\n            Plan Project\r\n          </Button>\r\n        </form>\r\n\r\n        {/* <form onSubmit={onSubmitHandler}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={onChangeHandler}\r\n          value={formState.name || ''}\r\n        />\r\n        <br />\r\n        <label htmlFor=\"position\">Position</label>\r\n        <input\r\n          id=\"position\"\r\n          type=\"text\"\r\n          name=\"position\"\r\n          onChange={onChangeHandler}\r\n          value={formState.position || ''}\r\n        />\r\n        <br />\r\n        <input\r\n          id=\"birthday\"\r\n          type=\"date\"\r\n          name=\"birthday\"\r\n          onChange={onChangeHandler}\r\n          value={formState.birthday.substring(0,10) || ''}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" >Submit</button>\r\n        <h2 onClick={callConsole}>console.log</h2>\r\n      </form> */}\r\n      </div>\r\n    </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, navigate } from '@reach/router'\r\nimport DeleteButton from './DeleteButton'\r\nimport PlayerHeader from './PlayerHeader'\r\nimport AddCircleOutlinedIcon from '@material-ui/icons/AddCircleOutlined';\r\nimport {\r\n    Paper,\r\n    FormControl,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Button,\r\n    styled,\r\n    Card,\r\n    CardContent,\r\n} from '@material-ui/core';\r\nconst styles = {\r\n    paper: {\r\n        minWidth: \"95%\", padding: \"1rem\", display:\"flex\", justifyContent: \"space-evenly\"\r\n    },\r\n    card: {\r\n        width: \"30%\", padding: \"1rem\", justifyContent: \"space-evenly\"\r\n    },\r\n    input: {\r\n        marginBottom: \"1rem\"\r\n    },\r\n    button: {\r\n        width: \"100%\"\r\n    }\r\n}\r\n\r\nconst Dashboard = (props) => {\r\n    const [state, setState] = useState([])\r\n    const [changeState, setchangeState] = useState(false)\r\n    const [sortdueDate, setSortdueDate] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        console.log('you are in useeffect')\r\n        axios.get(`http://localhost:8000/api/readAll/${sortdueDate}`)\r\n            .then(response => setState([...response.data]))\r\n            .catch(error => console.log(error))\r\n    }, [changeState,sortdueDate])\r\n \r\n    const sortDue = (e) => {\r\n        setSortdueDate(-1*sortdueDate)\r\n    }\r\n    \r\n    const goToNew = () => {\r\n        navigate('/projects/new')\r\n    }\r\n    const onClickHandler = (item, idx) => {\r\n        if (idx === 3) {\r\n            axios.delete(`http://localhost:8000/api/deleteOne/${item._id}`)\r\n                .then(response => setchangeState(!changeState))\r\n                .catch(error => console.log(error))\r\n        } else {\r\n            item.status = idx\r\n            axios.put(`http://localhost:8000/api/updateOne/${item._id}`,item)\r\n                .then(response => setchangeState(!changeState))\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n        \r\n    return (\r\n        <>\r\n        <Paper elevation={3} style={styles.paper}>\r\n        <Card style={styles.card}><CardContent>\r\n        <div className=\"backlog\">\r\n                <h2 onClick={sortDue} style={{backgroundColor: \"#9FC5F8\"}}>Backlog</h2>\r\n                {state.map((item, index) => (\r\n                    item.status === 0 ?\r\n                        <div key={index}>\r\n                            <h4>{item.name}</h4>\r\n                            <p style={{color:new Date(item.dueDate).getTime() - new Date().getTime() < 0 ? 'red':'black'}}>Due: {item.dueDate.substring(0,10)}</p>\r\n                            <Button style={{backgroundColor:\"#FFE599\"}} onClick={(e) => onClickHandler(item, 1)}>Start Project</Button>\r\n                      \r\n                        </div>\r\n                        : null\r\n                ))}\r\n            </div>\r\n            </CardContent></Card>\r\n            <Card style={styles.card}><CardContent>\r\n            <div className=\"progress\">\r\n                <h2 onClick={sortDue} style={{backgroundColor:\"#FFE599\"}}>In Progress</h2>\r\n                {state.map((item, index) => (\r\n                    item.status === 1 ?\r\n                        <div key={index}>\r\n                            <h4>{item.name}</h4>\r\n                            <p style={{color:new Date(item.dueDate).getTime() - new Date().getTime() < 0 ? 'red':'black'}}>Due: {item.dueDate.substring(0,10)}</p>\r\n                            <Button style={{backgroundColor:\"#B6D7A8\"}} onClick={(e) => onClickHandler(item, 2)}>Move To Completed</Button>\r\n                        </div>\r\n                        : null\r\n                ))}\r\n            </div>\r\n            </CardContent></Card>\r\n            <Card style={styles.card}><CardContent>\r\n            <div className=\"completed\">\r\n                <h2 onClick={sortDue} style={{backgroundColor:\"#B6D7A8\"}}>Completed</h2>\r\n                {state.map((item, index) => (\r\n                    item.status === 2 ?\r\n                        <div key={index}>\r\n                            <h4>{item.name}</h4>\r\n                            <p style={{color:new Date(item.dueDate).getTime() - new Date().getTime() < 0 ? 'red':'black'}}>Due: {item.dueDate.substring(0,10)}</p>\r\n                            <Button style={{backgroundColor:\"#EA9999\"}} onClick={(e) => onClickHandler(item, 3)}>Remove Project</Button>\r\n                </div>\r\n                        : null\r\n                ))}\r\n            </div>\r\n            </CardContent></Card>\r\n            </Paper>\r\n        <Button startIcon={<AddCircleOutlinedIcon />} style={{backgroundColor:\"#9FC5F8\", display:\"inline-block\", margin:\"1px\", textAlign: \"left\"}} onClick={goToNew}>Add New Project</Button>\r\n        </>\r\n        // <Paper elevation={3} style={styles.paper}>\r\n        // <div>\r\n        //     <PlayerHeader />\r\n        //     <h5 style={{textAlign: \"left\"}}>you are in dashboard.jsx</h5>\r\n        //     <table>\r\n        //         <thead>\r\n        //             <tr>\r\n        //                 <th >Player Name</th>\r\n        //                 <th>Preferred Position</th>\r\n        //                 <th onClick={sortDue}>Birthday (Sortable)</th>\r\n        //                 <th>Actions</th>\r\n        //             </tr>\r\n        //         </thead>\r\n        //         <tbody>\r\n        //             {state.map((item, index) => (\r\n        //                 <tr key={index}>\r\n        //                     <td><Link to={`/players/edit/${item._id}`}>{item.name}</Link></td>\r\n        //                     <td>{item.position}</td>\r\n        //                     <td onClick={(e)=> goToEdit(e,item)}>{item.birthday ? item.birthday.substring(0,10) : \"\"}</td>\r\n        //                     <td><DeleteButton playerId = {item._id} successCallback = {()=>deleteFromState()} /></td>\r\n        //                 </tr>\r\n        //             ))}\r\n        //         </tbody>\r\n        //     </table>\r\n        // </div>\r\n        // </Paper>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, {useEffect} from 'react';\nimport './App.css';\n// import 'materialize-css/dist/css/materialize.min.css';\nimport {Router, navigate} from '@reach/router'\nimport Dashboard from './components/Dashboard'\nimport Form from './components/Form'\nimport Header from './components/Header'\nimport PlayerHeader from './components/PlayerHeader'\nimport Status from './components/Status'\n\nfunction App() {\n    useEffect(() => {\n        navigate('/')\n     }, [])\n     \n  return (\n    <div className=\"App\">\n        <h1>Project Manager</h1>\n        <Router>\n            <Dashboard path=\"/\" />\n            <Form path=\"/projects/new\" />\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}